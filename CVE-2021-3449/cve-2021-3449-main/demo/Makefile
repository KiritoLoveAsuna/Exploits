CFLAGS ?= -Og -Wall
export CFLAGS
CXXFLAGS ?= -Og -Wall
export CXXFLAGS

IMAGE_PREFIX := local/cve-2021-3449
UBUNTU_VERSION ?= focal
IMAGE_INT := $(IMAGE_PREFIX)/base-$(UBUNTU_VERSION)
IMAGE_INT_REQ := build-base-$(UBUNTU_VERSION)

CONTAINER_PREFIX := cve-2021-3449

TARGETS := apache haproxy lighttpd nginx nodejs openssl

BUILD_TARGETS := $(addprefix build-, $(TARGETS))
.PHONY: $(BUILD_TARGETS)
$(BUILD_TARGETS): build-%: $(IMAGE_INT_REQ)
	docker build -f $*.Dockerfile -t $(IMAGE_PREFIX)/$* --build-arg "BASE_IMAGE=$(IMAGE_INT)" .

START_TARGETS := $(addprefix start-, $(TARGETS))
.PHONY: $(START_TARGETS)
$(START_TARGETS): start-%: build-%
	docker run -d -it --name $(CONTAINER_PREFIX)-$* --network host $(IMAGE_PREFIX)/$*
	docker logs -f $(CONTAINER_PREFIX)-$* &

LOGS_TARGETS := $(addprefix logs-, $(TARGETS))
.PHONY: $(LOGS_TARGETS)
$(LOGS_TARGETS): logs-%:
	docker logs $(CONTAINER_PREFIX)-$*

STOP_TARGETS := $(addprefix stop-, $(TARGETS))
.PHONY: $(STOP_TARGETS)
$(STOP_TARGETS): stop-%:
	docker container rm -f $(CONTAINER_PREFIX)-$* || true

.PHONY: $(IMAGE_INT_REQ)
$(IMAGE_INT_REQ): libcrypto.so.1.1 libssl.so.1.1 openssl server.pem
	docker build -f base.Dockerfile -t $(IMAGE_INT) --build-arg "BASE_IMAGE=ubuntu:$(UBUNTU_VERSION)" .

server.pem:
	openssl req -x509 -newkey rsa:2048 -keyout ./key.pem -out ./cert.pem -days 365 -nodes -subj "/CN=dummycert/O=My Company Name/C=US"
	cat key.pem cert.pem >> server.pem
	rm key.pem cert.pem

.PHONY: clean
clean: $(STOP_TARGETS)
	docker image rm -f $(addprefix $(IMAGE_PREFIX)/,$(TARGETS))
	rm -rf ./*.pem ./*.so* ./openssl ./openssl_dir ./openssl-1.1.1j ./openssl-1.1.1j.tar.gz ./openssl-1.1.1j.tar.gz.download

openssl libcrypto.so.1.1 libssl.so.1.1: openssl_dir/Makefile
	$(MAKE) -C openssl_dir -j4 apps/openssl libcrypto.so libssl.so
	ln -f openssl_dir/libcrypto.so.1.1 libcrypto.so.1.1
	ln -f openssl_dir/libssl.so.1.1 libssl.so.1.1
	ln -f openssl_dir/apps/openssl openssl

openssl_dir/Makefile: openssl_dir/.downloaded
	cd openssl_dir && ./config && $(MAKE) build_generated

openssl_dir/.downloaded: openssl-1.1.1j.tar.gz
	tar -xzf openssl-1.1.1j.tar.gz
	ln -sf openssl-1.1.1j openssl_dir
	touch openssl_dir/.downloaded

openssl-1.1.1j.tar.gz: openssl-1.1.1j.tar.gz.download
	sha256sum -c openssl-1.1.1j.tar.gz.sha256sum
	ln -sf openssl-1.1.1j.tar.gz.download openssl-1.1.1j.tar.gz

openssl-1.1.1j.tar.gz.download:
	curl https://www.openssl.org/source/old/1.1.1/openssl-1.1.1j.tar.gz --output openssl-1.1.1j.tar.gz.download
